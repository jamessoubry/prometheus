version: '2'

volumes:
    prometheus_data: {}
    grafana_data: {}
  #  consul_data: {}

networks:
  prom-network:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24

services:


  consul:
    container_name: consul
    image: progrium/consul
    ports: 
      - 8400:8400 
      - 8500:8500
      - 8300:8300
      - 8600:53/udp
    expose:
      - 8400
      - 8500
      - 8300
      - 8600/udp
#    volumes:
#      - consul_data:/data
    command: 
      - '-server'
      - '-bootstrap'
    networks:
      prom-network:
        ipv4_address: 172.25.0.101



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - "-web.console.libraries=/usr/share/prometheus/console_libraries"
      - "-web.console.templates=/usr/share/prometheus/consoles"
    expose:
      - 9090
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - prom-network

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '-collector.procfs=/host/proc'
      - '-collector.sysfs=/host/sys'
      - '-collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '-collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    ports:
      - 9100:9100
    expose:
      - 9100
    networks:
      - prom-network

  alertmanager-1:
    container_name: alertmanager-1
    image: prom/alertmanager
    ports:
      - 9093:9093
    expose:
      - 6783
      - 9093
    environment:
      - 'SERVICE_6783_NAME=alertmanager-1'
      - 'SERVICE_9093_NAME=alertmanager-1'
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - prom-network
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
      - '-mesh.peer=alertmanager2:6783'

  alertmanager-2:
    container_name: alertmanager-2
    image: prom/alertmanager
    expose:
      - 6783
      - 9093
    environment:
      - 'SERVICE_6783_NAME=alertmanager-2'
      - 'SERVICE_9093_NAME=alertmanager-2'
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - prom-network
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
      - '-mesh.peer=alertmanager1:6783'

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - prom-network

  grafana:
    container_name: grafana
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - ./grafana/config.monitoring
    networks:
      - prom-network



  grafana-setup:
    container_name: grafana-setup
    image: byrnedo/alpine-curl
    depends_on:
      - grafana
    volumes:
      - './grafana:/grafana:ro'
    entrypoint: '/bin/sh /grafana/grafana-setup.sh 1>&2'
    networks:
      - prom-network


  nginx:
    container_name: nginx
    image: kazaoki/nginx-vts
    ports:
      - 8012:80
    expose:
      - 80
      - 443
    environment:
      - 'SERVICE_80_NAME=nginx'
      - 'SERVICE_443_NAME=nginx'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - prom-network


  nginx2:
    container_name: nginx2
    image: kazaoki/nginx-vts
    ports:
      - 8013:80
    expose:
      - 80
      - 443
    environment:
      - 'SERVICE_80_NAME=nginx'
      - 'SERVICE_443_NAME=nginx'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - prom-network



  nginx-exporter:
    container_name: nginx-exporter
    image: sophos/nginx-vts-exporter
    ports:
      - 9913:9913
    expose:
      - 9913
    environment:
      - NGIX_HOST=http://nginx
      - METRICS_NS=nginx
      - SERVICE_NAME=nginx-exporter
      - SERVICE_TAGS=metrics
    networks:
      - prom-network

  nginx-exporter2:
    container_name: nginx-exporter2
    image: sophos/nginx-vts-exporter
    ports:
      - 9912:9913
    expose:
      - 9913
    environment:
      - NGIX_HOST=http://nginx2
      - METRICS_NS=nginx
      - 'SERVICE_NAME=nginx-exporter'
      - 'SERVICE_TAGS=metrics'
    networks:
      - prom-network

  # marathon-exporter:
  #   container_name: marathon-exporter
  #   image: bergerx/prom-marathon-app-exporter
  #   ports:
  #     - 9099:9099 
  #   expose:
  #     - 9099
  #   environment:
  #     - MARATHON_URL=http://10.1.11.157:8080


  mesos-exporter:
    container_name: mesos-exporter
    image: mesosphere/mesos_exporter
    ports:
      - 9105:9105
    expose:
      - 9105
      - 9110
    environment:
      - 'SERVICE_9110_NAME=mesos-exporter'
      - 'SERVICE_9105_NAME=mesos-exporter'
      - 'SERVICE_9105_TAGS=metrics'
    command:
      - '-master=http://10.1.7.19:5050'
    networks:
      - prom-network

  nginx-lula:
    container_name: nginx-lula
    image: oatty/nginx-lua-prometheus
    ports:
      - 81:80
      - 9145:9145
    expose:
      - 80
      - 9145
      - 443
    networks:
      - prom-network
    environment:
      - 'SERVICE_9145_NAME=nginx-lula'
      - 'SERVICE_80_NAME=nginx-lula'
      - 'SERVICE_443_NAME=nginx-lula'
      - 'SERVICE_9145_TAGS=metrics'
    volumes:
      - ./nginx/nginx-lula.conf:/nginx/conf/nginx.conf


  registrator:
    container_name: registrator
    image: gliderlabs/registrator
    depends_on:
      - consul
      - cadvisor
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock:ro'
    command:
      - '-internal=true'
      - '-cleanup=true'
      - 'consul://consul:8500'
    networks:
      - prom-network

  bookstore:
    container_name: bookstore
    image: maven:3-jdk-8
    volumes:
      - './bookstore:/usr/src/bookstore:ro'
    ports:
      - "8090:8090"
    expose:
      - 8090
    environment:
      - 'SERVICE_NAME=bookstore'
      - 'SERVICE_TAGS=metrics'
    command: "bash -c 'cp -r /usr/src/bookstore /tmp/java-app; cd /tmp/java-app; mvn clean package exec:java'"
    networks:
      - prom-network

  reading:
    container_name: reading
    image: maven:3-jdk-8
    volumes:
      - './reading:/usr/src/reading:ro'
    ports:
      - "8091:8091"
    expose:
      - 8091
    environment:
      - 'SERVICE_NAME=reading'
      - 'SERVICE_TAGS=metrics'
    command: "bash -c 'cp -r /usr/src/reading /tmp/java-app; cd /tmp/java-app; mvn clean package exec:java'"
    networks:
      - prom-network